[
  {
    "type_of": "article",
    "id": 1951537,
    "title": "7 Open Source Projects You Should Know - Python Edition ✔️",
    "description": "Overview   Hi everyone 👋🏼​ In this article, I'm going to look at seven OSS repository that...",
    "published": true,
    "published_at": "2024-08-12T06:00:00.000Z",
    "slug": "7-open-source-projects-you-should-know-python-edition-4h6c",
    "path": "/this-is-learning/7-open-source-projects-you-should-know-python-edition-4h6c",
    "url": "https://dev.to/this-is-learning/7-open-source-projects-you-should-know-python-edition-4h6c",
    "comments_count": 2,
    "public_reactions_count": 40,
    "page_views_count": 2989,
    "published_timestamp": "2024-08-12T06:00:00Z",
    "body_markdown": "## Overview\nHi everyone 👋🏼​\nIn this article, I'm going to look at seven OSS repository that you should know written in Python, interesting projects that caught my attention and that I want to share.\nLet's start 🤙🏼​\n\n---\n\n## 1. [pandas](https://pandas.pydata.org/)\npandas is a package that provides fast, flexible, and expressive data structures designed to make working with \"relational\" or \"labeled\" data both easy and intuitive. It aims to be the fundamental high-level building block for doing practical, real world data analysis in Python 👾\n{% embed https://github.com/pandas-dev/pandas %}\n\n## 2. [Apache Airflow](https://airflow.apache.org/)\nApache Airflow is an amazing platform to programmatically author, schedule, and monitor workflows.\nWhen workflows are defined as code, they become more maintainable, versionable, testable, and collaborative 🥶\n\n{% embed https://github.com/apache/airflow %}\n \n## 3. [G4F](https://g4f.ai/)\nG4F, is a powerful Large Language Model Command Line Interface (LLM-CLI) on a mission to decentralize and provide free access to advanced AI technologies 🥸\n{% embed https://github.com/xtekky/gpt4free %}\n\n## 4. [Scrapy](https://scrapy.org/)\nScrapy is a BSD-licensed fast high-level web crawling and web scraping framework, used to crawl websites and extract structured data from their pages. It can be used for a wide range of purposes, from data mining to monitoring and automated testing 🤗\n{% embed https://github.com/scrapy/scrapy %}\n\n## 5. Ultroid\nUltroid is an advanced multi-featured Telegram UserBot, built in Python using Telethon lib 🤖\n{% embed https://github.com/TeamUltroid/Ultroid %}\n\n## 6. [Zulip](https://zulip.com/)\nZulip is an open-source team collaboration tool with unique topic-based threading that combines the best of email and chat to make remote work productive and delightful. Zulip is the only modern team chat app that is designed for both live and asynchronous conversations 📱\n{% embed https://github.com/zulip/zulip %}\n\n## 7. [Freqtrade](https://www.freqtrade.io/en/stable/)\nFreqtrade is a free and open source crypto trading bot. It is designed to support all major exchanges and be controlled via Telegram or webUI. It contains backtesting, plotting and money management tools as well as strategy optimization by machine learning 🪙\n{% embed https://github.com/freqtrade/freqtrade %}\n\n    \n---\n \n## Conclusion\nThis list lists seven open source projects that are worth checking out, either to use them or even to contribute🖖\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e\n",
    "positive_reactions_count": 40,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fxjr2zr2u4pfjpr42v3j4.png",
    "tag_list": ["opensource", "python", "github", "softwaredevelopment"],
    "canonical_url": "https://medium.com/@domenicotenace/7-open-source-projects-you-should-know-python-edition-%EF%B8%8F-08ad8a86ccf5",
    "reading_time_minutes": 2,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    },
    "organization": {
      "name": "This is Learning",
      "username": "this-is-learning",
      "slug": "this-is-learning",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png"
    }
  },
  {
    "type_of": "article",
    "id": 1930028,
    "title": "7 Open Source Projects You Should Know - Rust Edition ✔️",
    "description": "Overview   Hi everyone 👋🏼​ In this article, I'm going to look at seven OSS repository that...",
    "published": true,
    "published_at": "2024-07-29T06:10:00.000Z",
    "slug": "7-open-source-projects-you-should-know-rust-edition-3mpe",
    "path": "/this-is-learning/7-open-source-projects-you-should-know-rust-edition-3mpe",
    "url": "https://dev.to/this-is-learning/7-open-source-projects-you-should-know-rust-edition-3mpe",
    "comments_count": 2,
    "public_reactions_count": 14,
    "page_views_count": 725,
    "published_timestamp": "2024-07-29T06:10:00Z",
    "body_markdown": "## Overview\nHi everyone 👋🏼​\nIn this article, I'm going to look at seven OSS repository that you should know written in Rust, interesting projects that caught my attention and that I want to share.\nLet's start 🤙🏼​\n\n---\n\n## 1. [Deno](https://deno.com/)\nDeno is the open-source JavaScript, TypeScript, and WebAssembly  runtime for the modern web. Built on web standards with zero-config TypeScript, unmatched security, and a complete built-in toolchain, it is the easiest, most productive way to JavaScript.\nIt's a most competitor of Node.js, another JavaScript runtime 😌\n\n{% embed https://github.com/denoland/deno %}\n\n## 2. [Espanso](https://espanso.org/)\nEspanso is Cross-platform Text Expander, program that detects when you type a specific keyword and replaces it with something else.\nEspanso is privacy first and cross platform, available for Linux, Windows and macOS 🥳\n\n{% embed https://github.com/espanso/espanso %}\n \n## 3. [Hyperswitch](https://hyperswitch.io/)\nHyperswitch is an open source payments switch written in Rust to make payments fast, reliable and affordable, and integrates well with the largest payment providers (Stripe, Klarna, PayPal...) and you can deploy it to the AWS Cloud 😯\n\n{% embed https://github.com/juspay/hyperswitch %}\n\n## 4. [Starship](https://starship.rs/)\nStarship is minimal, blazing-fast, and infinitely customizable prompt for any shell. It's fast, intelligent and easy to install, available for Linux, Windows, macOS and more 🥸\n\n{% embed https://github.com/starship/starship %}\n\n## 5. [Diesel](https://diesel.rs/)\nDiesel is safe, extensible ORM and Query Builder for Rust.\nIt gets rid of the boilerplate for database interaction and eliminates runtime errors without sacrificing performance. It takes full advantage of Rust's type system to create a low overhead query builder that \"feels like Rust\" 🤙\n \n{% embed https://github.com/diesel-rs/diesel %}\n\n## 6. [Tokio](https://tokio.rs/)\nTokio is an event-driven, non-blocking I/O platform for writing asynchronous applications with the Rust programming language.\nIt gives the flexibility to target a wide range of systems, from large servers with dozens of cores to small embedded devices 👐 \n\n{% embed https://github.com/tokio-rs/tokio %}\n\n## 7. [Zola](https://www.getzola.org/)\nZola is a static site generator in a single binary with everything built-in: it gets out of your way so you can focus on your content, be it a blog, a knowledge base, a landing page or a combination of them 🧠\n\n{% embed https://github.com/getzola/zola %}\n\n    \n---\n \n## Conclusion\nThis list lists seven open source projects that are worth checking out, either to use them or even to contribute🖖\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e\n",
    "positive_reactions_count": 14,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fvf4ns3w1w7886wcqurel.png",
    "tag_list": ["opensource", "rust", "github", "softwaredevelopment"],
    "canonical_url": "https://medium.com/@domenicotenace/7-open-source-projects-you-should-know-rust-edition-%EF%B8%8F-65db0b1bb9e2",
    "reading_time_minutes": 2,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    },
    "organization": {
      "name": "This is Learning",
      "username": "this-is-learning",
      "slug": "this-is-learning",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png"
    }
  },
  {
    "type_of": "article",
    "id": 1918813,
    "title": "7 Open Source Projects You Should Know - Java Edition ✔️",
    "description": "Overview   Hi everyone 👋🏼​ In this article, I'm going to look at seven OSS repository that...",
    "published": true,
    "published_at": "2024-07-14T06:00:00.000Z",
    "slug": "7-open-source-projects-you-should-know-java-edition-1mkb",
    "path": "/this-is-learning/7-open-source-projects-you-should-know-java-edition-1mkb",
    "url": "https://dev.to/this-is-learning/7-open-source-projects-you-should-know-java-edition-1mkb",
    "comments_count": 5,
    "public_reactions_count": 173,
    "page_views_count": 16055,
    "published_timestamp": "2024-07-14T06:00:00Z",
    "body_markdown": "## Overview\nHi everyone 👋🏼​\nIn this article, I'm going to look at seven OSS repository that you should know written in Java, interesting projects that caught my attention and that I want to share.\nLet's start 🤙🏼​\n\n---\n\n## 1. [Robolectric](https://robolectric.org/)\nRobolectric is a unit testing framework for Android. Your tests run in a simulated Android environment inside a JVM, without the overhead and flakiness of an emulator. It tests routinely run 10x faster than those on cold-started emulators 😈\n \n{% embed https://github.com/robolectric/robolectric %}\n\n## 2. [Elasticsearch](https://www.elastic.co/elasticsearch)\nElasticsearch is a distributed search and analytics engine optimized for speed and relevance on production-scale workloads.  Search in near real-time over massive datasets, perform vector searches, integrate with generative AI applications, and much more 🤠 \n\n{% embed https://github.com/elastic/elasticsearch %}\n \n## 3. [dotCMS](https://www.dotcms.com/) \ndotCMS is an open source headless/hybrid content management system that has been designed to manage and deliver personalized, permission-based content experiences across multiple channels.\nIt can can serve as a content hub and also as a platform for sites, mobile apps, mini-sites, portals, intranets 🤖\n\n{% embed https://github.com/dotCMS/core %}\n\n## 4. [Apache Tika](https://tika.apache.org/) \nThe Apache Tika toolkit detects and extracts metadata and text from over a thousand different file types (such as PPT, XLS, and PDF). All of these file types can be parsed through a single interface, making Tika useful for search engine indexing, content analysis, translation, and much more 🤗\n\n{% embed https://github.com/apache/tika %}\n\n## 5. [GraalVM](https://www.graalvm.org/) \nGraalVM is a high-performance JDK distribution that compiles your Java applications ahead of time into standalone binaries. These binaries start instantly, provide peak performance with no warmup, and use fewer resources 👾\n\n{% embed https://github.com/oracle/graal %}\n\n## 6. [OpenSearch](https://opensearch.org/docs/latest/about/)\nOpenSearch is an open source distributed and RESTful search engine, fork of Elasticsearch and Kibana following the license change in early 2021 🔎\n\n{% embed https://github.com/opensearch-project/OpenSearch %}\n\n## 7. [ThingsBoard](https://thingsboard.io/)\nThingsBoard is an open-source IoT platform for data collection, processing, visualization, and device management.\nIt enables device connectivity via industry standard IoT protocols: MQTT, CoAP and HTTP and supports both cloud and on-premises deployments 🦾\n\n{% embed https://github.com/thingsboard/thingsboard %}\n\n    \n---\n \n## Conclusion\nThis list lists seven open source projects that are worth checking out, either to use them or even to contribute🖖\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e\n",
    "positive_reactions_count": 173,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fdgbbi24e8dmkce7zb1hd.png",
    "tag_list": ["opensource", "github", "softwaredevelopment", "java"],
    "canonical_url": "https://medium.com/@domenicotenace/7-open-source-projects-you-should-know-java-edition-%EF%B8%8F-7d385c2865c9",
    "reading_time_minutes": 2,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    },
    "organization": {
      "name": "This is Learning",
      "username": "this-is-learning",
      "slug": "this-is-learning",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png"
    }
  },
  {
    "type_of": "article",
    "id": 1905845,
    "title": "7 Open Source Projects You Should Know - PHP Edition ✔️",
    "description": "Overview   Hi everyone 👋🏼​ In this article, I'm going to look at seven OSS repository that...",
    "published": true,
    "published_at": "2024-07-03T06:23:56.764Z",
    "slug": "7-open-source-projects-you-should-know-php-edition-2ji0",
    "path": "/this-is-learning/7-open-source-projects-you-should-know-php-edition-2ji0",
    "url": "https://dev.to/this-is-learning/7-open-source-projects-you-should-know-php-edition-2ji0",
    "comments_count": 0,
    "public_reactions_count": 26,
    "page_views_count": 2642,
    "published_timestamp": "2024-07-03T06:23:56Z",
    "body_markdown": "## Overview\nHi everyone 👋🏼​\nIn this article, I'm going to look at seven OSS repository that you should know written in PHP, interesting projects that caught my attention and that I want to share.\nLet's start 🤙🏼​\n\n---\n\n## 1. [Nextcloud](https://nextcloud.com/)\nNextcloud is a suite of client-server software for creating and using file hosting services. It is an open source alternative to Google Suite. It can be hosted in the cloud or on-premises ☁️\n\n{% embed https://github.com/nextcloud/server %}\n\n## 2. [Matomo](https://matomo.org/)\nMatomo is an open source alternative to Google Analytics that protects your data and your customers' privacy.\nMatomo lets you easily collect data from websites \u0026 apps and visualise this data and extract insights 📈\n\n{% embed https://github.com/matomo-org/matomo %}\n \n## 3. [Flarum](https://flarum.org/)\nFlarum is a delightfully simple discussion platform for your website: it's community framework for small to enterprise communities that is extensible, scalable and completely free💲\n\n{% embed https://github.com/flarum/flarum %}\n\n## 4. [Firefly III](https://firefly-iii.org/)\nFirefly III is a (self-hosted) manager for your personal finances. It can help you keep track of your expenses and income, so you can spend less and save more. It supports the use of budgets, categories and tags ❤️‍🔥\n\n{% embed https://github.com/firefly-iii/firefly-iii %}\n\n## 5. [LinkFree Generator](https://linkfree.ckt.im/)\nLinkFree Generator is an open source alternative to Linktree, a tool to help you share everything you are, in one simple link.\nIt's simple to use and free! 🌲\n\n{% embed https://github.com/chriskthomas/linkfree-generator %}\n\n## 6. [Infection](https://infection.github.io/)\nInfection is a PHP mutation testing library based on AST (Abstract Syntax Tree) mutations. It works as a CLI tool and can be executed from your project’s root.\nMutation Testing is a fault-based testing technique which provides a testing criterion called the Mutation Score Indicator 🐉 \n\n{% embed https://github.com/infection/infection %}\n\n## 7. [OpenCart](https://www.opencart.com/)\nOpenCart is a free open source e-commerce platform for online merchants. OpenCart provides a professional and reliable foundation from which to build a successful online store.\n\n{% embed https://github.com/opencart/opencart %}\n\n    \n---\n \n## Conclusion\nThis list lists seven open source projects that are worth checking out, either to use them or even to contribute🖖\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e\n",
    "positive_reactions_count": 26,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fg6t3v70nnoy1chcxuyc5.png",
    "tag_list": ["opensource", "github", "php", "webdev"],
    "canonical_url": "https://medium.com/@domenicotenace/7-open-source-projects-you-should-know-php-edition-%EF%B8%8F-f9a1e35725f2",
    "reading_time_minutes": 2,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    },
    "organization": {
      "name": "This is Learning",
      "username": "this-is-learning",
      "slug": "this-is-learning",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png"
    }
  },
  {
    "type_of": "article",
    "id": 1894029,
    "title": "7 Open Source Projects You Should Know - C# Edition ✔️",
    "description": "Overview   Hi everyone 👋🏼​ In this article, I'm going to look at seven OSS repository that...",
    "published": true,
    "published_at": "2024-06-27T07:51:55.907Z",
    "slug": "7-open-source-projects-you-should-know-c-edition-2bmh",
    "path": "/this-is-learning/7-open-source-projects-you-should-know-c-edition-2bmh",
    "url": "https://dev.to/this-is-learning/7-open-source-projects-you-should-know-c-edition-2bmh",
    "comments_count": 19,
    "public_reactions_count": 259,
    "page_views_count": 21634,
    "published_timestamp": "2024-06-27T07:51:55Z",
    "body_markdown": "## Overview\nHi everyone 👋🏼​\nIn this article, I'm going to look at seven OSS repository that you should know written in C#, interesting projects that caught my attention and that I want to share.\nLet's start 🤙🏼​\n\n---\n\n## 1. [QuestPDF](https://www.questpdf.com/)\nQuestPDF is open source .NET library for PDF document generation. Offering comprehensive layout engine powered by concise and discoverable C# Fluent API.\nEasy to use, you can build your PDF document, step by step 🙂‍↕️\n \n{% embed https://github.com/QuestPDF/QuestPDF %}\n\n## 2. [ShareX](https://getsharex.com/)\nShareX is a free and open source software that lets you capture or record any area of your screen and share it with a single press of a key.\nI use this software every day: it's magical 🧙🏼‍♂️\n \n{% embed https://github.com/ShareX/ShareX %}\n \n## 3. [OpenRA](https://www.openra.net/)\nDo you know _Command \u0026 Conquer: Red Alert_?\nThen you'll love this: OpenRA is open source real-time strategy game engine for early Westwood games.\nIt runs on Windows, Linux, and Mac OS X.\n\n{% embed https://github.com/OpenRA/OpenRA %}\n\n## 4. [Uno Platform](https://platform.uno/)\nUno Platform is an open source platform for building single codebase native mobile, web, desktop, and embedded apps quickly.\nIt allows C# and WinUI XAML and/or C# code to run on all target platforms while allowing you control of every pixel.\nIt's amazing, try it 🥇\n\n{% embed https://github.com/unoplatform/uno %}\n\n## 5. QRCoder\nQRCoder is a simple library, written in C#, which enables you to create QR codes. It is important to specify that it has no external dependencies and is supported for different versions of.NET (Framework, Core, etc.)\nIt is available as a NuGet package.\n\n{% embed https://github.com/codebude/QRCoder %}\n\n## 6. Windows Auto Dark Mode\nWindows Auto Dark Mode is a simple software available in Microsoft Store, to switch between dark and light theme for Windows 10 and Windows 11.\nSimple, clean and functional 💣\n\n{% embed https://github.com/AutoDarkMode/Windows-Auto-Night-Mode %}\n\n## 7. [Ryujinx](https://www.ryujinx.org/)\nLast but not least, a real gem for fans of Nintendo games: Ryujinx is a Nintendo Switch emulator written in C#.\nThis emulator aims at providing excellent accuracy and performance, a user-friendly interface and consistent builds ✈️\n\n{% embed https://github.com/Ryujinx/Ryujinx %}\n\n    \n---\n \n## Conclusion \nThis list lists seven open source projects that are worth checking out, either to use them or even to contribute🖖\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e\n",
    "positive_reactions_count": 259,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fjb0gwmei11qf32skfiun.png",
    "tag_list": ["opensource", "github", "csharp", "dotnet"],
    "canonical_url": "https://medium.com/@domenicotenace/7-open-source-projects-you-should-know-c-edition-%EF%B8%8F-cce284097ef2",
    "reading_time_minutes": 2,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    },
    "organization": {
      "name": "This is Learning",
      "username": "this-is-learning",
      "slug": "this-is-learning",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png"
    }
  },
  {
    "type_of": "article",
    "id": 1858935,
    "title": "7 Open Source Projects You Should Know - JavaScript Edition ✔️",
    "description": "Overview   Hi everyone 👋🏼​ In this article, I'm going to look at seven OSS repository that...",
    "published": true,
    "published_at": "2024-06-19T09:55:00.000Z",
    "slug": "7-open-source-projects-you-should-know-javascript-edition-150",
    "path": "/this-is-learning/7-open-source-projects-you-should-know-javascript-edition-150",
    "url": "https://dev.to/this-is-learning/7-open-source-projects-you-should-know-javascript-edition-150",
    "comments_count": 9,
    "public_reactions_count": 208,
    "page_views_count": 15163,
    "published_timestamp": "2024-06-19T09:55:00Z",
    "body_markdown": "## Overview\nHi everyone 👋🏼​\nIn this article, I'm going to look at seven OSS repository that you should know written in JavaScript, interesting projects that caught my attention and that I want to share.\nLet's start 🤙🏼​\n\n---\n\n## 1. [Appwrite](https://appwrite.io/)\nAppwrite is an end-to-end backend server for Web, Mobile, Native, or Backend apps.\nYou can easily integrate your app with user authentication, a database for storing and querying users and team data, storage and file management, image manipulation, Cloud Functions, and more services.\n\n{% embed https://github.com/appwrite/appwrite %}\n\n## 2. [melonJS](https://melonjs.org/)\nmelonJS is an HTML5 game engine that empowers developers and designers to focus on content.\nThe framework provides a comprehensive collection of components and support for a number of third-party tools.\nIt is an alternative to other JavaScript game engines such as [Phaser](https://phaser.io/) 🤞\n\n{% embed https://github.com/melonjs/melonJS %}\n\n## 3. [GDevelop](https://gdevelop.io/)\nGDevelop is another free, open-source game engine build from any platforms like PC or phone.\nThe peculiarity of this game engine is that it is possible to create video games without using code, because it uses a logic system based on _conditions_ and _actions_.\n\n{% embed https://github.com/4ian/GDevelop %}\n\n## 4. [Egg.js](https://mikeflynn.github.io/egg.js/)\nEgg.js is a simple library that allows you to easily add web easter eggs by watching the user's key strokes.\nIt's simple to use and very funny 🤣\n\n{% embed https://github.com/mikeflynn/egg.js %}\n\n## 5. [API Vault](https://apivault.dev/)\nAPI Vault is a beautiful project written in JavaScript: it's an online platform that works as a gateway to a world of public APIs.\nYou can also filter the APIs by category and find the one that's right for you 🖐\n\n{% embed https://github.com/Exifly/ApiVault %}\n\n\n## 6. [sweetalert2](https://sweetalert2.github.io/)\nsweetalert2 is a beautiful, responsive, customizable, accessible replacement for JavaScript's popup boxes without external dependencies.\nPrimarily designed for JavaScript projects, you can integrate it with the three big frontend frameworks: Angular, React, and Vue.\n\n{% embed https://github.com/sweetalert2/sweetalert2 %}\n\n## 7. [Video.js](https://videojs.com/)\nVideo.js is a web video player built that supports HTML video and Media Source Extensions, as well as other playback techs like YouTube and Vimeo. It supports video playback on desktops and mobile devices.\nAs with sweetalert2, you can integrate this library with the three JavaScript frameworks: Angular, React, and Vue.\n\n{% embed https://github.com/videojs/video.js %}\n    \n---\n \n## Conclusion \nThis list lists seven open source projects that are worth checking out, either to use them or even to contribute🖖\nHappy coding!✨\n\n---\n\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e\n\n",
    "positive_reactions_count": 208,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fyygqip5aikbso3oozqsn.png",
    "tag_list": ["opensource", "github", "javascript", "programming"],
    "canonical_url": "https://javascript.plainenglish.io/7-open-source-projects-you-should-know-javascript-edition-%EF%B8%8F-180833ee9b22",
    "reading_time_minutes": 3,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    },
    "organization": {
      "name": "This is Learning",
      "username": "this-is-learning",
      "slug": "this-is-learning",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png"
    }
  },
  {
    "type_of": "article",
    "id": 1836228,
    "title": "Reusable UI structure: Layouts 💱",
    "description": "Overview   It may happen during development that you have to reuse the same components for...",
    "published": true,
    "published_at": "2024-05-22T08:37:54.214Z",
    "slug": "a-reusable-ui-structure-layouts-5eh5",
    "path": "/this-is-learning/a-reusable-ui-structure-layouts-5eh5",
    "url": "https://dev.to/this-is-learning/a-reusable-ui-structure-layouts-5eh5",
    "comments_count": 0,
    "public_reactions_count": 5,
    "page_views_count": 322,
    "published_timestamp": "2024-05-22T08:37:54Z",
    "body_markdown": "## Overview\nIt may happen during development that you have to reuse the same components for the entire use of the application.\nTherefore, without having to import components for each page, it is possible to create Components that act as wrappers: Layouts.\nIn this article, we'll look at how to use them and how they perform in an Astro project.\nLet's start! 🤙\n\n---\n\n## What are Layouts?\nLayouts are [Astro Components](https://dev.to/dvalin99/build-your-interface-in-astro-components-2gng) used to provide a reusable UI structure, such as a page template.\nThe term _layout_ is used for components that provide common interface elements that are shared across pages, such as headers, navigation bars, and footers.\nThey can accept props and import and use other components like any other Astro component. They can include UI frameworks, components, and client-side scripts.\nLayout components are commonly placed in a `src/layouts` directory in your project.\n\n```html\n---\nimport Navbar from '../components/BaseHead.astro';\nimport Footer from '../components/Footer.astro';\nconst { title } = Astro.props;\n---\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"utf-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n    \u003cNavbar title={title}/\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003ch1\u003e{title}\u003c/h1\u003e\n    \u003carticle\u003e\n      \u003cslot /\u003e\n    \u003c/article\u003e\n    \u003cFooter /\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\n```\n\n`\u003cslot /\u003e` tag is important because it is the point where the content will be \"injected\".\n\n```html\n---\nimport BaseLayout from '../layouts/BaseLayout.astro';\n---\n\u003cBaseLayout title=\"Home Page\"\u003e\n  \u003cp\u003eHello from home page!\u003c/p\u003e\n\u003c/BaseLayout\u003e\n```\n\n## Markdown layouts\nLayouts are especially useful for Markdown and MDX pages which otherwise would not have any page formatting.\nAstro provides a special property called `layout` to specify which `.astro` component to use as the page layout.\n\nIn general, a tipical Markdown layout includes:\n\n- The `frontmatter` prop to access the Markdown or MDX page’s frontmatter and other data.\n\n- A default `\u003cslot /\u003e` to inject the contents.\n\n```md\n---\nlayout: ../layouts/BaseLayout.astro \ntitle: \"A reusable UI structure: Layouts 💱\"\nauthor: \"Domenico Tenace\"\ndate: \"23 Jun 2024\"\n---\n\nThis is my new article!\n\n```\n\n```html\n--- \nconst { frontmatter } = Astro.props;\n---\n\u003chtml\u003e\n  \u003chead\u003e \n    \u003ctitle\u003e{frontmatter.title}\u003c/title\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e \n    \u003ch1\u003e{frontmatter.title} by {frontmatter.author}\u003c/h1\u003e \n    \u003cslot /\u003e\n    \u003cp\u003eWritten on: {frontmatter.date}\u003c/p\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\n\n```\n\n##Importing Layouts Manually (MDX)\nYou may need to pass information to your MDX layout that does not exist in your frontmatter. In this case, you can instead import and use a `\u003cLayout /\u003e` component and pass it props like any other component:\n\n```md\n---\nlayout: ../../layouts/BaseLayout.astro\ntitle: 'My first MDX post'\npublishDate: '23 Jun 2024'\n---\nimport BaseLayout from '../../layouts/BaseLayout.astro';\n\nexport function fancyJsHelper() {\n  return \"Try doing that with YAML!\";\n}\n\n\u003cBaseLayout title={frontmatter.title} fancyJsHelper={fancyJsHelper}\u003e\n  Welcome to my new Astro blog, using MDX!\n\u003c/BaseLayout\u003e\n```\nAnd now, your values are available to you through Astro.props in your layout, and your MDX content will be injected into the page where your `\u003cslot /\u003e` component is written: \n\n```html\n---\nconst { title, fancyJsHelper } = Astro.props;\n---\n\n \n\u003ch1\u003e{title}\u003c/h1\u003e\n\u003cslot /\u003e \n\u003cp\u003e{fancyJsHelper()}\u003c/p\u003e\n \n```\n\n---\n \n## Conclusion\nAstro Layouts allow the reuse of basic components that should be recalled for each page of our site. They are also very useful when used in `.md` or `.mdx` files.\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e",
    "positive_reactions_count": 5,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Flu55n06ghuxfwouz9ped.png",
    "tag_list": ["astro", "javascript", "frontend", "webdev"],
    "canonical_url": "https://javascript.plainenglish.io/a-reusable-ui-structure-layouts-b6cc78a20d93",
    "reading_time_minutes": 3,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    },
    "organization": {
      "name": "This is Learning",
      "username": "this-is-learning",
      "slug": "this-is-learning",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png"
    }
  },
  {
    "type_of": "article",
    "id": 1836310,
    "title": "Top 3 (+1) Vue libraries for your next project ⏩",
    "description": "Overview   Hi everyone 👋🏼​ In this article, I'm going to look at my three favorite libraries...",
    "published": true,
    "published_at": "2024-04-30T08:00:00.000Z",
    "slug": "top-3-1-vue-libraries-for-your-next-project-481e",
    "path": "/this-is-learning/top-3-1-vue-libraries-for-your-next-project-481e",
    "url": "https://dev.to/this-is-learning/top-3-1-vue-libraries-for-your-next-project-481e",
    "comments_count": 0,
    "public_reactions_count": 9,
    "page_views_count": 1660,
    "published_timestamp": "2024-04-30T08:00:00Z",
    "body_markdown": "## Overview\nHi everyone 👋🏼​\nIn this article, I'm going to look at my three favorite libraries for developing Vue applications. These are all libraries that I have used throughout my experience with this framework and that I have found interesting.\nLet's start 🤙🏼​\n\n---\n\n## 1. [Prime Vue](https://primevue.org/)\nPrimeVue is a complete UI suite for Vue.js consisting of a  set of UI components. The project's primary goal is to boost developer productivity by offering reusable solutions that are easy to tune and customize as an in-house library.\nPrimeVue was developed by PrimeTek, a world-renowned provider of popular component suites, which is also responsible for developing PrimeReact.\n\nIt's a comprehensive framework, packed with ready-to-use components and extremely flexible when it comes to customizing it to your needs. It's on the rise rapidly and has gained a lot of popularity among Vue developers in the last period.\n\n{% embed https://github.com/primefaces/primevue %}\n\n## 2. [Buefy](https://buefy.org/)\nBuefy is a lightweight UI component library based on Vue.js and Bulma CSS.\nIt provides a set of stylized components using Bulma's classes, using the full power of Vue.js, encapsulating the logic for each component.\n\nAs with Bulma, one of the strengths of this framework is definitely its flexibility: you can [customize](https://buefy.org/documentation/customization) the theme and style according to what you need.\n\n{% embed https://github.com/buefy/buefy %}\n\n## 3. [Oruga UI](https://oruga-ui.com/)\nOruga is a lightweight UI components library for Vue.js without any dependency.\nIt offers a set of easily customisable components and doesn't depend on any specific style.\n\nOruga provides you with a set of functional components, so you can focus only on the UI/UX aspects of your application and can be entirely flexible for future changes without having to touch a line of JavaScript.\n\n{% embed https://github.com/oruga-ui/oruga %}\n\n## 4. [BONUS] [Bulma CSS](https://bulma.io/)\nBulma is not a framework based on Vue.js, it's a simple lightweight framework without any JavaScript dependencies.\nIn other words, Bulma is a CSS library, with **ONLY** CSS and it provides CSS classes to help you style your HTML code.\n\nBulma stands out for its ease of use and very low learning curve, compatible with all kind of frontend frameworks.\n\n{% embed https://github.com/jgthms/bulma %}\n\n\n\n---\n \n## Conclusion\nI have listed what for me are the most valid frameworks for a Vue.js project, I hope this article has been helpful.\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e",
    "positive_reactions_count": 9,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F5034g358xwagc3drb2zm.png",
    "tag_list": ["vue", "javascript", "webdev", "frontend"],
    "canonical_url": "https://javascript.plainenglish.io/top-3-1-vue-libraries-for-your-next-project-571253d878eb",
    "reading_time_minutes": 2,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    },
    "organization": {
      "name": "This is Learning",
      "username": "this-is-learning",
      "slug": "this-is-learning",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png"
    }
  },
  {
    "type_of": "article",
    "id": 1813356,
    "title": "The wrappers for your Components: Pages 📃",
    "description": "Overview   Each website allows you to view so-called \"web pages\", so that you can interact...",
    "published": true,
    "published_at": "2024-04-10T09:55:00.000Z",
    "slug": "the-wrappers-for-your-components-pages-5028",
    "path": "/this-is-learning/the-wrappers-for-your-components-pages-5028",
    "url": "https://dev.to/this-is-learning/the-wrappers-for-your-components-pages-5028",
    "comments_count": 0,
    "public_reactions_count": 2,
    "page_views_count": 223,
    "published_timestamp": "2024-04-10T09:55:00Z",
    "body_markdown": "## Overview\nEach website allows you to view so-called \"web pages\", so that you can interact or find information. In this article, we're going to explore Astro Pages and how they work.\nLet's start! 🤙\n\n---\n\n## What are Astro Pages?\nAstro Pages are files that are responsible for handling routing, data loading, and overall page layout for every page in your website.\nThey live in the `src/pages/` subdirectory.\n\n```html\n---\n---\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003ctitle\u003eMy Homepage\u003c/title\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003ch1\u003eWelcome to my website!\u003c/h1\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\n```\nThe example above shows a very simple Astro Page template.\nA page must produce a full HTML document. If not explicitly included, Astro will add the necessary `\u003c!DOCTYPE html\u003e` declaration and `\u003chead\u003e` content to any `.astro` component located within `src/pages/` by default. You can opt-out of this behavior on a per-component basis by marking it as a partial page.\n\n\n## Astro Pages with Markdown\nAll Markdown files within `src/pages/` are treated by Astro as pages of your final website. If the files are `.mdx` rather than `.md`, the end result will be the same.\n\n## Page Partials\nPartials are page components located within `src/pages/` that are not intended to render as full pages.\nWorking closely with third-party frontend libraries, they can be considered alternatives to the [Astro Islands](https://dev.to/dvalin99/pieces-of-interactives-astro-islands-4nnb).\nTo configure Page Partials, you need to export `const partial = true`, like following example:\n\n```html\n---\nexport const partial = true;\n---\n\n\u003ch1\u003eThis is partial page!\u003c/h1\u003e\n```\n\n---\n \n## Conclusion\nAstro Pages are fundamental components for building a static website using Astro: easy to set up and versatile for all types of use.\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e",
    "positive_reactions_count": 2,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fc4ucyc5b3ewkyyhx8r6l.png",
    "tag_list": ["astro", "javascript", "frontend", "webdev"],
    "canonical_url": "https://javascript.plainenglish.io/the-wrappers-for-your-components-pages-ba031ef4ce48",
    "reading_time_minutes": 2,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    },
    "organization": {
      "name": "This is Learning",
      "username": "this-is-learning",
      "slug": "this-is-learning",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png"
    }
  },
  {
    "type_of": "article",
    "id": 1791641,
    "title": "Build your interface in Astro: Components 🧩",
    "description": "Overview   Every frontend framework is based on the concept of Components: Vue, Angular,...",
    "published": true,
    "published_at": "2024-03-27T10:50:00.000Z",
    "slug": "build-your-interface-in-astro-components-2gng",
    "path": "/this-is-learning/build-your-interface-in-astro-components-2gng",
    "url": "https://dev.to/this-is-learning/build-your-interface-in-astro-components-2gng",
    "comments_count": 5,
    "public_reactions_count": 7,
    "page_views_count": 457,
    "published_timestamp": "2024-03-27T10:50:00Z",
    "body_markdown": "## Overview\nEvery frontend framework is based on the concept of Components: Vue, Angular, React use this powerful feature to build complete applications.\nAstro is no exception, and in this article we will see what Components is and how to use it in an Astro project.\nLet's start! 🤙\n\n---\n\n## What are Astro Components?\nAstro Components are reusable pieces of code and they are HTML-only templating components with no client-side runtime.\nThe extension of these files is `.astro`.\nAstro components are extremely flexible because you can use them in different ways:\n\n- It can contain some reusable UI on the page like footer or navbar.\n- It may contain a collection of common `\u003cmeta\u003e` tags that make SEO easy to work with.\n- It can even contain an entire page layout. \n\nIt is important to know that Astro Components **do not render on the client**, it's possible include JavaScript code inside of your component frontmatter, and all of it will be stripped from the final page sent to your use's browsers. \n\n## The Structure\nAn Astro Component is made up of two main parts: script and the template.  \n\n```html\n---\n// Component Script (JavaScript or Typescript code)\n---\n\u003c!-- Component Template (HTML + JS Expressions) --\u003e\n```\n\nYou can use the  script to write any JavaScript code that you need to render your template, for example:\n\n- importing other Astro components\n- importing other framework components, like Vue\n- importing data, like a JSON file\n- fetching content from an API or database\n\n```js\n\nimport SomeAstroComponent from '../components/SomeAstroComponent.astro';\nimport SomeReactComponent from '../components/SomeVueComponent.vue';\nimport someData from '../data/data.json';\n\nconst { title } = Astro.props;\n\nconst data = await fetch('example/posts').then(r =\u003e r.json());\n```\nThis approach is highly secure because at build time, the JavaScript code will not end up in the end user's browser.\n\nInstead the template determines the HTML output of your component: if you write plain HTML here, your component will render that HTML in any Astro page it is imported and used.\nAstro’s component template syntax also supports JavaScript expressions, `\u003cstyle\u003e` and `\u003cscript\u003e` tags, imported components, and special Astro directives. \nData and values defined in the component script can be used in the component template to produce dynamically-created HTML, like Vue or React.\n\n```js\n---\n// Your component script here!\nimport Banner from '../components/Banner.astro';\nimport VueCardComponent from '../components/VueCardComponent.vue';\nconst myFavoriteFruits = [/* ... */];\nconst { title } = Astro.props;\n---\n\n\u003cBanner /\u003e\n\u003ch1\u003eHello, Astro!\u003c/h1\u003e\n\n \u003cp\u003e{title}\u003c/p\u003e\n\n\u003cVueCardComponent client:visible /\u003e\n\n\u003cul\u003e\n  {myFavoriteFruits.map((data) =\u003e \u003cli\u003e{data.name}\u003c/li\u003e)}\n\u003c/ul\u003e\n\n\u003cp class:list={[\"add\", \"dynamic\", {classNames: true}]} /\u003e\n```\n\n## Props\nAn Astro component can define and accept props. These props then become available to the component template for rendering HTML. Props are available on the `Astro.props` global in your script.\n\nDeclaration:\n\n```js\n---\n const { greeting, name } = Astro.props;\n---\n\u003ch2\u003e{greeting}, {name}!\u003c/h2\u003e\n```\n\nUsage:\n\n```html\n\u003cGreetingHeadline greeting=\"Hello\" name=\"World\" /\u003e\n```\n\nIt's possible define your props with TypeScript with a `Props` type interface. Astro will automatically pick up the Props interface in your frontmatter and give type warnings/errors. \n\n```js\n---\ninterface Props {\n  name: string;\n  greeting?: string;\n}\n\nconst { greeting = \"Hello\", name } = Astro.props;\n---\n\u003ch2\u003e{greeting}, {name}!\u003c/h2\u003e\n```\n\n## Slots\nThe `\u003cslot /\u003e` element is a placeholder for external HTML content, allowing you to inject child elements from other files into your component template.\n\nBy default, all child elements passed to a component will be rendered in its `\u003cslot /\u003e`.\nFor example:\n\n```js\n---\nimport Header from './Header.astro';\nimport Logo from './Logo.astro';\nimport Footer from './Footer.astro';\n\nconst { title } = Astro.props;\n---\n\u003cdiv id=\"content-wrapper\"\u003e\n  \u003cHeader /\u003e\n  \u003cLogo /\u003e\n  \u003ch1\u003e{title}\u003c/h1\u003e\n  \u003cslot /\u003e  \n  \u003cFooter /\u003e\n\u003c/div\u003e\n\n```\n\n```js\n---\nimport Wrapper from '../components/Wrapper.astro';\n---\n\u003cWrapper title=\"John's Page\"\u003e\n  \u003ch2\u003eAll about John\u003c/h2\u003e\n  \u003cp\u003eHere is some stuff about John.\u003c/p\u003e\n\u003c/Wrapper\u003e\n```\n\n## Named Slots\nAn Astro component can also have named slots. This allows you to pass only HTML elements with the corresponding slot name so you can place different elements in as many places.\n\n```js\n---\nimport Header from './Header.astro';\nimport Logo from './Logo.astro';\nimport Footer from './Footer.astro';\n\nconst { title } = Astro.props;\n---\n\u003cdiv id=\"content-wrapper\"\u003e\n  \u003cHeader /\u003e\n  \u003cslot name=\"after-header\" /\u003e  \n  \u003cLogo /\u003e\n  \u003ch1\u003e{title}\u003c/h1\u003e\n  \u003cslot /\u003e \n  \u003cFooter /\u003e\n  \u003cslot name=\"after-footer\" /\u003e\n\u003c/div\u003e\n```\n\nTo inject HTML content into a particular slot, use the slot attribute on any child element to specify the name of the slot, in this way:\n\n```js\n---\nimport Wrapper from '../components/Wrapper.astro';\n---\n\u003cWrapper title=\"Fred's Page\"\u003e\n  \u003cimg src=\"https://myphoto/john.jpg\" slot=\"after-header\" /\u003e\n  \u003ch2\u003eAll about John\u003c/h2\u003e\n  \u003cp\u003eHere is some stuff about John.\u003c/p\u003e\n  \u003cp slot=\"after-footer\"\u003eCopyright 2024\u003c/p\u003e\n\u003c/Wrapper\u003e\n```\n\n## HTML Components, it's possible\nAstro supports importing and using `.html` files as components. You may want to use HTML components if you’re reusing code from an existing site built without a framework, or if you want to ensure that your component has no dynamic features.\n\nHTML components must contain only valid HTML, and therefore lack key Astro component features:\n\n- They don’t support frontmatter, server-side imports, or dynamic expressions.\n- Any `\u003cscript\u003e` tags are left unbundled, treated as if they had `is:inline`.\n- They can only reference assets that are in the `public/` folder.\n\n\n---\n \n## Conclusion\nAstro Components are fundamental for build your UI. Their encapsulation of functionality, reusability, and ease of integration make them a powerful tool for building scalable and maintainable website.\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e",
    "positive_reactions_count": 7,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F9w757bnaeqy6gqwg7ffb.png",
    "tag_list": ["astro", "javascript", "frontend", "webdev"],
    "canonical_url": "https://javascript.plainenglish.io/build-your-interface-in-astro-components-1329cfebed89",
    "reading_time_minutes": 4,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    },
    "organization": {
      "name": "This is Learning",
      "username": "this-is-learning",
      "slug": "this-is-learning",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png"
    }
  },
  {
    "type_of": "article",
    "id": 1737150,
    "title": "Pieces of interactives: Astro Islands ☄️",
    "description": "Overview   Astro's philosophy is centered around not using JavaScript, but it may happen in...",
    "published": true,
    "published_at": "2024-01-24T07:49:47.794Z",
    "slug": "pieces-of-interactives-astro-islands-4nnb",
    "path": "/this-is-learning/pieces-of-interactives-astro-islands-4nnb",
    "url": "https://dev.to/this-is-learning/pieces-of-interactives-astro-islands-4nnb",
    "comments_count": 3,
    "public_reactions_count": 8,
    "page_views_count": 290,
    "published_timestamp": "2024-01-24T07:49:47Z",
    "body_markdown": "## Overview\nAstro's philosophy is centered around not using JavaScript, but it may happen in some situations that you need to use it to give interactivity to certain elements of the page.\nIn this article we will see what Astro Islands are and how they work.\nLet's start! 🤙\n\n---\n## What are Astro Islands?\nIn **Astro**, an \"island\" refers to any interactive user interface component on the page. An island can be thought of as an interactive widget floating in a sea of ​​otherwise static, lightweight, server-rendered HTML.\nAn island always runs alone from the other islands on the page, in which multiple islands can exist. Islands can share statehood with each other.\nUnlike SPAs that load all client-side JavaScript, Astro Islands use a technique also known as **partial** or **selective hydration**.\nAstro support multiple frontend frameworks for create the islands like _Vue_, _React_, _Preact_, _Svelte_ and _SolidJS_.\n\n## How to create and Island\nBy default, Astro render the component without JavaScript, only HTML and CSS:\n\n```html\n\u003cRandomVueComponent /\u003e\n```\nTo make a component interactive, you need a client directive:*. Astro then automatically creates and bundles your client-side JavaScript for optimized performance.\n\n```html\n\u003cRandomVueComponent client:load /\u003e\n```\n\n## Benefits\nThe main advantage of the Astro Islands is performance: Astro render static HTML and JavaScript is only loaded for the individual components that need it.\nAnother benefit is parallel loading: if there are multiple islands on the page, no islands block the loading of the others but they will be loaded in parallel (and when necessary).\n\n---\n\n## Conclusion\nAstro Islands are isolated pieces of code that provide interactivity to an Astro page.\nMajor frontend frameworks such as Vue and React are supported. This type of approach provides greater performance without affecting the user experience. Make good use of it!\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e",
    "positive_reactions_count": 8,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F9j257zkizsgoeu66qz41.png",
    "tag_list": ["astro", "javascript", "frontend", "webdev"],
    "canonical_url": "https://javascript.plainenglish.io/pieces-of-interactives-astro-islands-%EF%B8%8F-6efc1e7af49c",
    "reading_time_minutes": 2,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    },
    "organization": {
      "name": "This is Learning",
      "username": "this-is-learning",
      "slug": "this-is-learning",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png"
    }
  },
  {
    "type_of": "article",
    "id": 1720958,
    "title": "Astro: the new frontier of Frontend Frameworks 🪐",
    "description": "Overview   In the historical period in which we live, the frontend world is saturated with...",
    "published": true,
    "published_at": "2024-01-10T09:16:29.380Z",
    "slug": "astro-the-new-frontier-of-frontend-frameworks-27f2",
    "path": "/this-is-learning/astro-the-new-frontier-of-frontend-frameworks-27f2",
    "url": "https://dev.to/this-is-learning/astro-the-new-frontier-of-frontend-frameworks-27f2",
    "comments_count": 17,
    "public_reactions_count": 36,
    "page_views_count": 8547,
    "published_timestamp": "2024-01-10T09:16:29Z",
    "body_markdown": "## Overview\nIn the historical period in which we live, the frontend world is saturated with frameworks: Vue, React, Angular, just to name the most famous.\nAll technologies focused on making the developer's life much easier, without really caring too much about performance.\nIn recent years, frontend frameworks have been emerging that focus on performance and speed: [Astro](https://astro.build/) is part of this generation of technologies.\nIn this article will show you what is Astro and how it works.\nLet's start! 🤙\n\n---\n\n## What is Astro?\nAstro is the web framework for building content-driven websites like blogs, portfolio, and e-commerce. \nWith Astro, the way has been opened for a new frontend architecture to reduce the overhead and complexity of JavaScript when loading web pages, making the site fast and SEO friendly.\n\n\n## The five principles of Astro's philosophy\nAstro was designed based on five fundamental principles to explain the need that led to its development and the problems it needs to solve:\n\n- **[Content-driven](https://docs.astro.build/en/concepts/why-astro/#content-driven)**: Astro was designed to give its all when developing content-focused products.\n- **[Server-first](https://docs.astro.build/en/concepts/why-astro/#server-first)**: websites run faster when they render HTML on the server.\n- **[Fast by default](https://docs.astro.build/en/concepts/why-astro/#fast-by-default)**: Astro is all about performance, which is why it is very difficult to create a slow product.\n- **[Easy to use](https://docs.astro.build/en/concepts/why-astro/#easy-to-use)**: You don’t need to be an expert to build something with Astro.\n- **[Developer-focused](https://docs.astro.build/en/concepts/why-astro/#developer-focused)**: the developer has everything he needs for his work at his disposal.\n\n## Main features\nAstro includes everything you need to create a website, built-in. There are also hundreds of different integrations and API hooks available to customize a project to your exact use case and needs.\n\nSome highlights include:\n\n- **Islands**: a web architecture based on \"isolated\" components that load JavaScript only when needed.\n- **UI-agnostic**: supports many frontend frameworks, liks React, Preact, Svelte, Vue, Solid, Lit, HTMX, web components.\n- **Zero JS, by default**: JavaScript is loaded only if necessary.\n- **Content collections**: organize, validate, and provide TypeScript type-safety for your Markdown content.\n- **Customizable**: easily integrated with many of the most popular plugins.\n\n---\n \n## Conclusion\nAstro is a new content- and performance-driven frontend framework that is easy to use and has everything you need to start developing a new project.\nWe will hear a lot about it in the future.\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e",
    "positive_reactions_count": 36,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fzuedc78xopnz9yxbz3pr.png",
    "tag_list": ["astro", "javascript", "frontend", "webdev"],
    "canonical_url": "https://javascript.plainenglish.io/astro-the-new-frontier-of-frontend-frameworks-09c2ade901c3",
    "reading_time_minutes": 2,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    },
    "organization": {
      "name": "This is Learning",
      "username": "this-is-learning",
      "slug": "this-is-learning",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Forganization%2Fprofile_image%2F3314%2Fdc73eb74-08f9-4592-b599-c08f2bb14b4d.png"
    }
  },
  {
    "type_of": "article",
    "id": 1678880,
    "title": "The pieces of UI: Components 🧩",
    "description": "Overview   Components allow us to divide the user interface into independent, reusable...",
    "published": true,
    "published_at": "2023-11-28T09:03:00.000Z",
    "slug": "the-pieces-of-ui-components-3ija",
    "path": "/dvalin99/the-pieces-of-ui-components-3ija",
    "url": "https://dev.to/dvalin99/the-pieces-of-ui-components-3ija",
    "comments_count": 0,
    "public_reactions_count": 5,
    "page_views_count": 306,
    "published_timestamp": "2023-11-28T09:03:00Z",
    "body_markdown": "## Overview\nComponents allow us to divide the user interface into independent, reusable parts, each independent of the other and they are considered the basis of an interface built with Vue.\nIn this article we will see what Components are and how they are used in a Vue app.\nLet's start! 🤙\n\n---\n\n## What is a Component?\nA Component is a reusable and independent portion of code that defines a specific element of the interface.\nA Vue Component, internally, encapsulates structure, style and logic (HTML,CSS,JavaScript).\nComponents are one of Vue's strong points, thanks to their flexibility and the possibility of using them in different points of the software.\n\n\n## Defining and using a Component\nWe typically define each Vue component in a dedicated file using the `.vue` extension for create it, in this way:\n\n```html\n\u003cscript setup\u003e\nimport { ref } from 'vue'\n\nconst count = ref(0)\n\u003c/script\u003e\n\n\u003ctemplate\u003e\n  \u003cbutton @click=\"count++\"\u003eYou clicked me {{ count }} times.\u003c/button\u003e\n\u003c/template\u003e\n```\nThe example above defines a simple button component that when clicked, will increment a counter.\nTo use a child component, we need to import it in the parent component:\n\n```html\n\u003cscript setup\u003e\nimport ButtonCounter from './ButtonCounter.vue'\n\u003c/script\u003e\n\n\u003ctemplate\u003e\n  \u003ch1\u003eHello button!\u003c/h1\u003e\n  \u003cButtonCounter /\u003e\n\u003c/template\u003e\n```\nNow, will render a button in the page.\nWe can also use more than one on the page in this way:\n\n```html\n\u003ctemplate\u003e\n  \u003ch1\u003eHello buttons!\u003c/h1\u003e\n  \u003cButtonCounter /\u003e\n  \u003cButtonCounter /\u003e\n  \u003cButtonCounter /\u003e\n\u003c/template\u003e\n```\nNow, each button is an instance in itself, so when you click one of them, its counter will be incremented.\n\n\u003e It's also possible to globally register a component, making it available to all components in a given app without having to import it\n\n---\n\n## What are Props?\nProps are custom attributes you can register on a component.\nLet's take the following Component as an example:\n\n```html\n\u003cscript setup\u003e\ndefineProps(['label'])\n\u003c/script\u003e\n\n\u003ctemplate\u003e\n  \u003cbutton\u003e{{ label }}\u003c/button\u003e\n\u003c/template\u003e\n```\n`defineProps` is a compile-time macro that is only available inside `\u003cscript setup\u003e` and does not need to be explicitly imported. Declared props are automatically exposed to the template. `defineProps` also returns an object that contains all the props passed to the component, so that we can access them in JavaScript if needed:\n\n```javascript\nconst props = defineProps(['label'])\nconsole.log(props.label)\n```\nOnce a prop is registered, you can pass data to it as a custom attribute, like this:\n\n```html\n\u003ctemplate\u003e\n  \u003ch1\u003eHello buttons!\u003c/h1\u003e\n  \u003cButtonCounter label=\"Increment\"/\u003e\n  \u003cButtonCounter label=\"Decrement\"/\u003e\n\u003c/template\u003e\n```\nLet's define a more practical example:\n\n```html\n\u003cscript setup\u003e\nimport { ref } from \"vue\";\n\nconst posts = ref([\n  { id: 1, title: 'Data binding: Directives 🫰' },\n  { id: 2, title: 'Reactivity: ref() vs reactive() 👊' },\n  { id: 3, title: 'Conditional rendering: v-if vs v-show 🫴'}\n])\n\u003c/script\u003e\n\n\u003ctemplate\u003e\n  \u003cBlogPost\n   v-for=\"post in posts\"\n   :key=\"post.id\"\n   :title=\"post.title\"\n  /\u003e\n\u003c/template\u003e\n```\nSuppose that `BlogPost` is a Component defined in another file and takes `title` as a prop.\nIn the above example we see an array of posts in a [v-for](https://dev.to/dvalin99/display-your-list-v-for-4m8c) and the `v-bind` is applied on the title property.\n`v-bind` is used to pass dynamic prop values. This is especially useful when you don't know the exact content you're going to render ahead of time.\n\n---\n\n## Slots\n\nLet's take the `ButtonCounter` component as an example: has a prop called `label` that defines the text inside it.\nThe same Component can be rewritten using `slot` and obtaining the same result:\n\n```html\n\u003ctemplate\u003e\n  \u003cbutton\u003e\u003cslot /\u003e\u003c/button\u003e\n\u003c/template\u003e\n```\nAnd when called:\n\n```html\n\u003cscript setup\u003e\nimport ButtonCounter from './ButtonCounter.vue'\n\u003c/script\u003e\n\n\u003ctemplate\u003e\n  \u003ch1\u003eHello button!\u003c/h1\u003e\n  \u003cButtonCounter\u003eIncrement\u003c/ButtonCounter\u003e\n\u003c/template\u003e\n```\n\n## Conclusion\nComponents are fundamental for build app Vue. Their encapsulation of functionality, reusability, and ease of integration make them a powerful tool for building scalable and maintainable web applications.\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e",
    "positive_reactions_count": 5,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fhipt6gx8ci3tydfg1og1.png",
    "tag_list": ["vue", "javascript", "webdev", "frontend"],
    "canonical_url": "https://javascript.plainenglish.io/the-pieces-of-ui-components-b5d625598414",
    "reading_time_minutes": 3,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    }
  },
  {
    "type_of": "article",
    "id": 1651071,
    "title": "Display your list: v-for 🫨",
    "description": "Overview   Vue allows object list rendering to be simple and clean: v-for directive. In this...",
    "published": true,
    "published_at": "2023-10-31T07:04:00.000Z",
    "slug": "display-your-list-v-for-4m8c",
    "path": "/dvalin99/display-your-list-v-for-4m8c",
    "url": "https://dev.to/dvalin99/display-your-list-v-for-4m8c",
    "comments_count": 1,
    "public_reactions_count": 9,
    "page_views_count": 251,
    "published_timestamp": "2023-10-31T07:04:00Z",
    "body_markdown": "## Overview\nVue allows object list rendering to be simple and clean: `v-for` [directive](https://dev.to/dvalin99/data-binding-directives-5gn2).\nIn this article we will explain how this is possible and when to use this feature.\nLet's start! 🤙\n\n---\n\n## How v-for works?🤔\nThe `v-for` directive render a list of items based on an array: requires a special syntax in the form of _item in items_, where items is the source data array and item is an alias for the array element being iterated.\nIn the following lines, there is a basic example of v-for use:\n\n```html\n\u003cscript setup\u003e\nimport { ref } from \"vue\"\n\nconst wizards = ref([{name:'Tom', surname:'Riddle'}, {name:'Harry', surname:'Potter'}]);\n\u003c/script\u003e\n\n\u003ctemplate\u003e\n   \u003cul\u003e\n     \u003cli v-for=\"wizard in wizards\"\u003eComplete name: {{ wizard.name }} {{ wizard.surname }}\u003c/li\u003e\n   \u003c/ul\u003e\n\u003c/template\u003e\n\n```\n`v-for` support second param during iteration: the index.\nConsider the previous example: let's add the index.\n\n```html\n\u003cscript setup\u003e\nimport { ref } from \"vue\"\n\nconst wizards = ref([{name:'Tom', surname:'Riddle'}, {name:'Harry', surname:'Potter'}]);\n\u003c/script\u003e\n\n\u003ctemplate\u003e\n   \u003cul\u003e\n     \u003cli v-for=\"(wizard, index) in wizards\"\u003e\n      {{ index }} Complete name: {{ wizard.name }} {{ wizard.surname }}\n     \u003c/li\u003e\n   \u003c/ul\u003e\n\u003c/template\u003e\n\n```\nIn this way will display the index of everything element of the array.\nFor nested `v-for`, scoping also works similar to nested functions. \nEach `v-for` scope has access to parent scopes:\n\n```html\n \u003cli v-for=\"item in items\"\u003e\n    \u003cspan v-for=\"childItem in item.children\"\u003e\n      {{ item.message }} {{ childItem }}\n    \u003c/span\u003e\n  \u003c/li\u003e\n```\n\n---\n\n## v-for with object\nYou can also use `v-for` to iterate through the properties of an object. The iteration order will be based on the result of calling `Object.keys()` on the object:\n\n```html\n\u003cscript setup\u003e\nimport { reactive } from \"vue\"\n\nconst wizard = reactive({name:'Harry', surname:'Potter', role:'Wizard'});\n\u003c/script\u003e\n\n\u003ctemplate\u003e\n   \u003cul\u003e\n     \u003cli v-for=\"(value, key, index) in wizards\"\u003e\n       {{ index }}. {{ key }}: {{ value }}\n     \u003c/li\u003e\n   \u003c/ul\u003e\n\u003c/template\u003e\n\n```\nThe above example is the complete way to render the values of object: `key` and `index` are the key of the object and the index of iteration, meanwhile `value` is the value of the key.\nObviously it is possible to render only the value.\n\n## v-for with a Range\n`v-for` can also take an integer. In this case it will repeat the template that many times, based on a range.\n\n```html\n \u003cli v-for=\"item in 10\"\u003e{{ item }}\u003c/li\u003e\n```\nIn this case, will display ten number from `1` to `10`.\n\n## v-for on template\nSimilar to template [`v-if`](https://dev.to/dvalin99/conditional-rendering-v-if-vs-v-show-4n1a), Vue allows use `v-for` on `\u003ctemplate\u003e` for render multiple code's blocks.\n\n```html\n\u003cul\u003e\n  \u003ctemplate v-for=\"wizard in wizards\"\u003e\n    \u003cli\u003e{{ wizard.name }} - {{ wizard.surname }}\u003c/li\u003e\n    \u003cli class=\"divider\"\u003e\u003c/li\u003e\n  \u003c/template\u003e\n\u003c/ul\u003e\n```\n\n---\n\n## v-for with v-if\n\n\u003e It's not recommended to use `v-if` and `v-for` on the same element due to implicit precedence. \n\nFollow this scenario:`v-if` and `v-for` on the same node. What is the problem?\n`v-if` has a higher priority than `v-for`, that means the `v-if` condition will not have access to variables from the scope of the `v-for`.\n\n```html\n\u003c!--\nThis will throw an error because property \"todo\"\nis not defined on instance.\n--\u003e\n\u003cli v-for=\"todo in todos\" v-if=\"!todo.isComplete\"\u003e\n  {{ todo.name }}\n\u003c/li\u003e\n```\nIt's possible solve this by moving `v-for` into a `\u003ctemplate\u003e` wrapper:\n\n```html\n\u003ctemplate v-for=\"todo in todos\"\u003e\n  \u003cli v-if=\"!todo.isComplete\"\u003e\n    {{ todo.name }}\n  \u003c/li\u003e\n\u003c/template\u003e\n```\n\n---\n\n## Key for the state\nVue by default uses an \"in-place patch\" strategy, updating a list of rendered items with `v-for`. If the order of the data elements has changed, instead of moving the DOM elements to match the element order, Vue will patch each element in place and make sure it reflects what should be displayed in that particular index.\n\nTo give Vue a hint so that it can track the identity of each node and then reuse and reorder existing elements, you need to provide a unique key attribute for each element.\nIn this case the `key` attribute comes into play:\n\n```html\n\u003cdiv v-for=\"wizard in wizards\" :key=\"wizard.id\"\u003e\n     {{ wizard }}\n\u003c/div\u003e\n```\nThe key is a special attribute that must be a primitive value.\nThe key feature is unique and it is recommended to provide it with `v-for` whenever possible.\nThird-party libraries such as [Lodash](https://lodash.com/docs/4.17.15#uniqueId) provide functions to generate unique keys.\n\n## Conclusion\nThe v-for directive in Vue.js is a powerful and flexible tool for rendering lists of data in your applications. Its simplicity and versatility make it an essential feature for Vue developers, allowing them to iterate through arrays and objects effortlessly, while also providing the freedom to customize the rendering process as needed.\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e",
    "positive_reactions_count": 9,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fgaedter1gututvgustej.png",
    "tag_list": ["vue", "javascript", "webdev", "frontend"],
    "canonical_url": "https://javascript.plainenglish.io/display-your-list-v-for-c720e736437f",
    "reading_time_minutes": 4,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    }
  },
  {
    "type_of": "article",
    "id": 1643891,
    "title": "Customize your components: Class and Style Bindings 💅",
    "description": "Overview   In Vue it's possible to manipulate style of your components for assign dynamic...",
    "published": true,
    "published_at": "2023-10-24T06:33:00.000Z",
    "slug": "customize-your-components-class-and-style-bindings-2kk9",
    "path": "/dvalin99/customize-your-components-class-and-style-bindings-2kk9",
    "url": "https://dev.to/dvalin99/customize-your-components-class-and-style-bindings-2kk9",
    "comments_count": 0,
    "public_reactions_count": 6,
    "page_views_count": 369,
    "published_timestamp": "2023-10-24T06:33:00Z",
    "body_markdown": "## Overview\nIn Vue it's possible to manipulate style of your components for assign dynamic value and create custom effects.\nIn this article will explain how to use this powerful feature.\nLet's start! 🤙\n\n---\n\n## Binding HTML Classes\n\u003e For data binding it's necessary the `v-model` directive (if you don't remember or don't know, you can read [this article](https://dev.to/dvalin99/data-binding-directives-5gn2)).\n\nThere are two ways for use the style binding: **Binding to Objects** or **Binding to Array**.\nLet's start with the first one.\n\u003cbr/\u003e\n### Object\n\n```html\n\u003cscript setup\u003e\nimport { ref } from \"vue\"\n\nconst hasError = ref(false);\n\u003c/script\u003e\n\n\u003ctemplate\u003e\n   \u003cdiv :class=\"{'text-danger': hasError }\"\u003e\u003c/div\u003e\n\u003c/template\u003e\n```\n\n`text-danger` is a CSS class and will be rendered when `hasError` will be `true`.\nYes, `hasError` is a simply JavaScript boolean value, in this case wrapped by `ref()`, but it's possible use anything JavaScript expression, for example:\n\n```html\n\u003cscript setup\u003e\nimport { ref } from \"vue\"\n\nconst someProp = ref(0);\n\u003c/script\u003e\n\n\u003cdiv :class=\"{'someClass': someProp === 0 ? true : false }\"\u003e\u003c/div\u003e\n```\nComputed properties are welcome and it's possible use it, in this way:\n\n```html\n\u003cscript setup\u003e\nimport { ref, computed } from \"vue\"\n\nconst isActive = ref(true);\nconst error = ref(null);\n\nconst computedProp = computed(() =\u003e ({\n  'someProp': isActive.value || !error.value,\n  'text-danger': error.value \u0026\u0026 error.value.type === 'danger'\n}))\n\u003c/script\u003e\n\n\u003ctemplate\u003e\n   \u003cdiv :class=\"computedProp\"\u003e\u003c/div\u003e\n\u003c/template\u003e\n```\n\u003cbr/\u003e\n\u003cbr/\u003e\n\n### Array\nWe can bind `:class` to an array to apply a list of classes in this way:\n\n```html\n\u003cscript setup\u003e\nimport { ref } from \"vue\"\n\nconst activeClass = ref('active');\nconst errorClass = ref('text-danger');\n\u003c/script\u003e\n\n\u003ctemplate\u003e\n   \u003cdiv :class=\"[activeClass, errorClass]\"\u003e\u003c/div\u003e\n\u003c/template\u003e\n```\nThis is the simplest example of using Arrays.\nAs for Object it's possible use anything JavaScript expression:\n\n```html\n\u003cdiv :class=\"[customClass ? isActive : '', anotherClass]\"\u003e\u003c/div\u003e\n```\n\n---\n \n## Binding Inline Styles\nAs for class, there are same ways for binding custom style.\n\n### Object\n```html\n\u003cscript setup\u003e\nimport { ref } from \"vue\"\n\nconst paragraphColor = ref('red');\nconst fontSize = ref(30);\n\u003c/script\u003e\n\n\u003ctemplate\u003e\n   \u003cp :style=\"{ color: activeColor, fontSize: fontSize + 'rem' }\"\u003e\u003c/p\u003e\n\u003c/template\u003e\n```\nAlthough camelCase keys are recommended, :style also supports kebab-cased CSS property keys,for example:\n\n```html\n  \u003cp :style=\"{ 'font-size': fontSize + 'rem' }\"\u003e\u003c/p\u003e\n```\nTo keep clean code, it's a good idea declare an object for style the code in this way:\n\n```html\n\u003cscript setup\u003e\nimport { reactive } from \"vue\"\n\nconst paragraph = reactive({\n  color: 'red',\n  fontSize: '13px'\n})\n\u003c/script\u003e\n\n\u003ctemplate\u003e\n   \u003cp :style=\"paragraph\"\u003e\u003c/p\u003e\n\u003c/template\u003e\n```\n\nAgain, object style binding is often used in conjunction with computed properties that return objects.\n\n### Array\nWe can bind `:style` to an array of multiple style objects. These objects will be merged and applied to the same element:\n\n```html\n\u003cdiv :style=\"[baseStyles, overridingStyles]\"\u003e\u003c/div\u003e\n```\n### Vendor Prefix\nWhen you use a CSS property that requires a vendor prefix  Vue will automatically add the appropriate prefix: it does this by checking at runtime to see which style properties are supported in the current browser. If the browser doesn't support a particular property then various prefixed variants will be tested to try to find one that is supported.\n\n---\n\n## Conclusion\n\nVue provides style binding to make your components custom, giving you the ability to create and manipulate the app's style at runtime.\nFeature not to be underestimated given its power.\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e",
    "positive_reactions_count": 6,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fsw3k2lngmz5928txdqa9.png",
    "tag_list": ["vue", "javascript", "webdev", "frontend"],
    "canonical_url": "https://javascript.plainenglish.io/customize-your-components-class-and-style-bindings-ac81ca1df6c0",
    "reading_time_minutes": 3,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    }
  },
  {
    "type_of": "article",
    "id": 1636387,
    "title": "The life of Vue app: Lifecycle Hooks♻️",
    "description": "Overview   In Vue there are many steps of app's lifecycle, each Vue component instance goes...",
    "published": true,
    "published_at": "2023-10-17T06:01:00.000Z",
    "slug": "the-life-of-vue-app-lifecycle-hooks-34j",
    "path": "/dvalin99/the-life-of-vue-app-lifecycle-hooks-34j",
    "url": "https://dev.to/dvalin99/the-life-of-vue-app-lifecycle-hooks-34j",
    "comments_count": 0,
    "public_reactions_count": 8,
    "page_views_count": 326,
    "published_timestamp": "2023-10-17T06:01:00Z",
    "body_markdown": "## Overview\nIn Vue there are many steps of app's lifecycle, each Vue component instance goes through a series of initialization steps when it's created.\nThese steps called Lifecycle Hooks.\nIn this article will explains what are Lifecycle Hooks and how to use it.\nLet's start! 🤙\n\n## What are Lifecycle Hooks?\nLifecycle Hooks are  a series of initialization steps where it possbile to set up data observation, compile the template, mount the instance to the DOM, and update the DOM when data changes.\n\n\n```javascript\n\u003cscript setup\u003e\nimport { onMounted } from 'vue'\n\nonMounted(() =\u003e  console.log(\"Hello mounted component!\"))\n\u003c/script\u003e\n```\n\n\nIn the above example the use of the `onMounted()` Hook is shown.\nWhen the component is mounted, the code inside the callback given to `onMounted()` will be executed and print the message to the console.\n\n---\n\n## Diagram\n\n\n![LifecycleDiagram.png](https://vuejs.org/assets/lifecycle.16e4c08e.png)\n\nThe above image is the official Vue diagram of Lifecycle Hooks where are illustrate the phases of Lifecycle:\n\n1. `onBeforeMount()`, when this hook is called, the component has finished setting up its reactive state, but no DOM nodes have been created yet. It is about to execute its DOM render effect for the first time.\n2. `onMounted()`: this hook is used for performing side effects that need access to the component's rendered DOM, or for limiting DOM-related code to the client in a server-rendered application.\n3. `onBeforeUpdate()`: this hook can be used to access the DOM state before Vue updates the DOM.\n4. `onUpdated()`: this hook is called after DOM update of the component, which can be caused by different state changes, because multiple state changes can be batched into a single render cycle for performance reasons. \n5. `onBeforeUnmount()`: when this hook is called, the component instance is still fully functional. \n6. `onUnmounted()`: use this hook to clean up manually created side effects such as timers, DOM event listeners or server connections.\n\n`onBeforeMount()`, `onBeforeUpdate()`, `onBeforeUnmount()` and `onUnmounted()` are not called during server-side rendering. \n\n## Conclusion\nLifecycle Hooks are very powerful features to take advantage of when implementing components in a Vue application to manipulate the DOM, clean up dirty data, etc.\nIt is recommended to make good use of it.\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e",
    "positive_reactions_count": 8,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fe63gygfn3cdiongnls0j.png",
    "tag_list": ["vue", "javascript", "frontend", "webdev"],
    "canonical_url": "https://javascript.plainenglish.io/the-life-of-vue-app-lifecycle-hooks-%EF%B8%8F-1ba8f1a6c720",
    "reading_time_minutes": 2,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    }
  },
  {
    "type_of": "article",
    "id": 1628950,
    "title": "Track your variables: Watchers 👀",
    "description": "Overview   Watchers are essential features for software development with Vue. In this...",
    "published": true,
    "published_at": "2023-10-10T06:02:00.000Z",
    "slug": "track-your-variables-watchers-3j6c",
    "path": "/dvalin99/track-your-variables-watchers-3j6c",
    "url": "https://dev.to/dvalin99/track-your-variables-watchers-3j6c",
    "comments_count": 2,
    "public_reactions_count": 7,
    "page_views_count": 538,
    "published_timestamp": "2023-10-10T06:02:00Z",
    "body_markdown": "## Overview\nWatchers are essential features for software development with Vue. In this article, we'll dive deeper into Vue Watchers and explore how they can be used to improve Vue application development.\nLet's start🤙🏻\n\n## What are Watchers? 🤔\nWatchers enable you to monitor changes to data properties and execute custom logic when these properties change. This functionality is invaluable when you need to respond to changes in your application's state.\nThe difference between [Computed Properties](https://dev.to/dvalin99/computed-properties-482) is that it tracks variable changes and triggers \"side effects\".\nThere are two ways to handle Watchers: `watch()` and `watchEffect()`.\n\n---\n\n## How to works `watch()`?\nLet's analyze the following example:\n\n```html\n\u003cscript setup\u003e\nimport { ref, watch } from \"vue\";\n\nconst isActive = ref(false);\n\nwatch(isActive,() =\u003e  console.log(`The switch is: ${isActive.value}`));\n\n\u003c/script\u003e\n\n\u003ctemplate\u003e\n  \u003cinput type=\"checkbox\" :value=\"isActive\"\u003e\n\u003c/template\u003e\n\n```\nThe example above is the base case of how to use the `watch()` API: it takes as arguments the source (`isActive` in this case) and a callback describing the custom logic.\nIt will trigger whenever `isActive` changes value.\n\u003cbr/\u003e\n\n## ...and `watchEffect()`?\n`watchEffect()` is similar to `watch()` API, but with a more streamlined syntax and a few key differences:\n\n- **Declarative Syntax**: `watchEffect()` uses a more declarative syntax compared to the `watch()` API. Instead of specifying what data property or properties you want to watch, you place your code directly inside the `watchEffect()` function, and it automatically detects the dependencies.\n\u003cbr/\u003e\n\n- **Automatic Dependency Tracking**: `watchEffect()` automatically tracks the reactive dependencies within its function body. This means that you don't need to specify dependencies explicitly as you would with the watch option. Vue figures out the dependencies for you, making the code more concise and less error-prone.\n\u003cbr/\u003e\n\n- **Immediate Execution**: `watchEffect()` runs its code immediately when you first create it, and then it re-runs whenever any of its tracked dependencies change. This is useful for scenarios where you want to perform an initial setup or computation and then react to subsequent changes.\n\nThe following example resumes the previous one using `watchEffect()`:\n\n```html\n\u003cscript setup\u003e\nimport { ref, watchEffect } from \"vue\";\n\nconst isActive = ref(false);\n\nwatchEffect(() =\u003e console.log(`The switch is: ${isActive.value}`));\n\n\u003c/script\u003e\n\n\u003ctemplate\u003e\n  \u003cinput type=\"checkbox\" :value=\"isActive\"\u003e\n\u003c/template\u003e\n\n```\n\n## Watchers vs Computed Properties 👊\nWatchers and [Computed Properties](https://dev.to/dvalin99/computed-properties-482) may be similar but not the same, and there are contexts in which you need to choose carefully.\n\n**Use Watchers when**:\n\n- Need to respond to changes in data with custom, imperative logic.\n- Need to perform asynchronous operations.\n- Need access to both old and new values of a property.\n- Want to watch multiple properties independently.\n\u003cbr/\u003e\n\n**Use Computed Properties when:**:\n\n- Want to compute or derive a new value based on existing data.\n- Want to benefit from automatic dependency tracking and performance optimization.\n\nUsing Watchers is much more expensive than using Computed Properties. It's recommended to use Computed Properties when there may be several status variations.🧠\n\n---\n\n## Conclusion\nWatchers are a powerful feature for handling reactivity. They allow to respond to data changes with custom logic, making your code more organized and maintainable.\n\nIncorporate Watchers into your projects, experiment with different use cases, and discover how they can simplify complex reactivity scenarios.\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e",
    "positive_reactions_count": 7,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fqmccgo74asdoe8q7s4n7.png",
    "tag_list": ["vue", "javascript", "frontend", "webdev"],
    "canonical_url": "https://javascript.plainenglish.io/track-your-variables-watchers-bbd1ab84c5b2",
    "reading_time_minutes": 3,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    }
  },
  {
    "type_of": "article",
    "id": 1603651,
    "title": "Conditional rendering: v-if vs v-show 🫴",
    "description": "Overview   In some cases it happens that you want to render certain portions of software...",
    "published": true,
    "published_at": "2023-09-19T08:00:00.000Z",
    "slug": "conditional-rendering-v-if-vs-v-show-4n1a",
    "path": "/dvalin99/conditional-rendering-v-if-vs-v-show-4n1a",
    "url": "https://dev.to/dvalin99/conditional-rendering-v-if-vs-v-show-4n1a",
    "comments_count": 0,
    "public_reactions_count": 3,
    "page_views_count": 277,
    "published_timestamp": "2023-09-19T08:00:00Z",
    "body_markdown": "## Overview\nIn some cases it happens that you want to render certain portions of software according to certain conditions.\nIn this article will explains what is Conditional rendering and how Vue handle it.\nLet's start🤙🏻\n\n## What is Conditional rendering?\nConditional rendering is the rendering of a portion of software based on a certain condition that can changes over time.\nNot only does Vue have this feature, but also other frontend frameworks like React and Angular. The difference is the way it is managed.\nIn Vue there are two ways: `v-if` and `v-show`, two native Directives of the framework.\n\n---\n\n## How works v-if?\nThe `v-if` directive is used simply to conditionally render a block. The block will be rendered only if the directive expression returns a true value.\n\n```html\n\u003ch1 v-if=\"isTrue\"\u003eFollow me on GitHub: DomeT99\u003c/h1\u003e\n```\n\n`v-if` takes simply as condition a JavaScript expression.\nIt's possible indicate an \"else block\" with another Directive: `v-else`.\n\n```html\n\u003ch1 v-if=\"isTrue\"\u003eFollow me on GitHub: DomeT99\u003c/h1\u003e\n\u003ch1 v-else\u003eOr dev.to: Domenico Tenace\u003c/h1\u003e\n```\n\nIf `isTrue` condition is false, `v-else` render the second title.\nExists another Directive that indicate \"else if block\" and is called `v-else-if`.\n\n```html\n\u003cdiv v-if=\"social === 'GitHub'\"\u003e\n  Follow me on GitHub: DomeT99\n\u003c/div\u003e\n\u003cdiv v-else-if=\"social === 'dev.to'\"\u003e\n  Follow me on dev.to: Domenico Tenace\n\u003c/div\u003e\n\u003cdiv v-else\u003e\n  Visit my Linktree for more links: linktree.com/domenicotenace\n\u003c/div\u003e\n```\n\n`v-if` also support the `\u003ctemplate\u003e` element for wrapper more HTML tags to render.\n\n## How works `v-show`?\nAnother way to use conditional rendering is another directive called \"v-show\" and it's not that different from `v-if` on the surface.\n\n```html\n\u003ch1 v-show=\"isTrue\"\u003eFollow me on GitHub: DomeT99\u003c/h1\u003e\n```\n\nWhether you use `v-if` or `v-show` the final result in this case will be the same. \nSo what's the difference between the two?\nThe key difference is that an element with `v-show` will always be rendered and remain in the DOM; `v-show` only toggles the display CSS property of the element.\n\n`v-show` doesn't support the `template` element, nor does it work with `v-else`.\n\n---\n\n## `v-if` vs `v-show`\n`v-if` is \"real\" conditional rendering because it ensures that event listeners and child components inside the conditional block are properly destroyed and re-created.\nIt's lazy, infact if the condition is false on initial render, it will not do anything the conditional block won't be rendered until the condition becomes true for the first time.\n\n`v-show` is much simpler, the element is always rendered regardless of initial condition, with CSS-based toggling.\n\nIn general, `v-if` has higher toggle costs while `v-show` has higher initial rendering costs. So it is preferable to use `v-show` if you need to activate something very often and `v-if` if the condition is unlikely to change at run time.\n\n## Conclusion\nThese are the ways in which Vue handles Conditional Rendering, which can be expensive when rendering with `v-show` and more expensive when toggle with `v-if`. \nThey must be used in the right contexts.\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e",
    "positive_reactions_count": 3,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fixowrjs1k551rvyyz0ed.png",
    "tag_list": ["vue", "javascript", "frontend", "webdev"],
    "canonical_url": "https://javascript.plainenglish.io/conditional-rendering-v-if-vs-v-show-7b7d50c0f611",
    "reading_time_minutes": 3,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    }
  },
  {
    "type_of": "article",
    "id": 1597944,
    "title": "Data binding: Directives 🫰",
    "description": "Overview   Vue provides a special attribute called \"Directive\" the reactive changes to the...",
    "published": true,
    "published_at": "2023-09-15T07:53:45.243Z",
    "slug": "data-binding-directives-5gn2",
    "path": "/dvalin99/data-binding-directives-5gn2",
    "url": "https://dev.to/dvalin99/data-binding-directives-5gn2",
    "comments_count": 0,
    "public_reactions_count": 10,
    "page_views_count": 433,
    "published_timestamp": "2023-09-15T07:53:45Z",
    "body_markdown": "## Overview\nVue provides a special attribute called \"Directive\" the reactive changes to the DOM.\nIn this article will explains what is a Directive and how to use it.\nLet's start🤙🏻\n\n## What is a Directive?\nAs mentioned in the paragraph above, Directive is a special attribute for apply the reactive changes to the DOM. \nIs recognizable because is preceded by the character `v-` and Vue provides [some Directives](https://vuejs.org/api/built-in-directives.html) like `v-if` or  `v-for`.\nIt's possible create custom Directives, but this an advanced concept.\n\n---\n\n## Arguments\n```js\n\u003ca v-bind:href=\"url\"\u003eFollow me on GitHub\u003c/a\u003e\n```\n\nIn the example above, the `v-bind` directive takes `href` as an argument and is associated with a JavaScript value, in this case a `url` variable.\nThe structure is:\n-  `v-bind`, the name of Directive\n-  `:href`, the name of argument preceded from semicolon\n-  `url`, the value of binding\n\nWhen the `url` changes, thanks to `v-bind`, Vue will apply the relative changes to the DOM.\n\n## Dynamic Arguments\nIt also possible use the power of JavaScript and use a dynamic expression as argument in this way:\n\n```js\n\u003ca v-bind:[dynamicArgument]=\"url\"\u003eClick here!\u003c/a\u003e\n```\n\nthe argument is wrapped by square brackets and it's a JavaScript expression.\nDynamic arguments are expected to evaluate to a string, with the exception of null. The special value null can be used to explicitly remove the binding.\n\nYou have to keep in mind that certain characters such as spaces and quotes, are invalid inside HTML attribute names.\n\n```js\n\u003ca v-bind:[\"link\" + dynamicArgument]=\"url\"\u003eClick here!\u003c/a\u003e\n```\n\nThis example above **is invalid**.\n\n## Modifiers\nThere are some Directives, for example `v-on`, that have another attribute: **Modifier**.\nThey are are special postfixes denoted by a dot which indicate that a directive should be bound in some special way.\n\nFor example, it's possible to use `.prevent` on `v-on:submit`, and it will indicate to call `event.preventDefault()` on the triggered event.\n\n```js\n\u003cform v-on:submit.prevent=\"onSubmit\"\u003e\u003c/form\u003e\n```\n## Shorthand\nThere are another to declare `v-bind` and `v-on`, shorthand way:\n\n- `v-bind`: this directive is deleted completely in this way:\n\n```js\n\u003ca :href=\"url\"\u003eFollow me on GitHub\u003c/a\u003e\n```\n\n- `v-on`: this directive is replaced by `@` in this way:\n```js\n\u003cform @submit.prevent=\"onSubmit\"\u003e\u003c/form\u003e\n```\n---\n\n## Conclusion\nDirectives are a very important feature of Vue that allow you to manipulate data dynamically.\nFor this reason it is essential to know in depth.\nAnd now...\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e",
    "positive_reactions_count": 10,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fyxclhrz8ejhma4js1lc6.png",
    "tag_list": ["vue", "javascript", "webdev", "frontend"],
    "canonical_url": "https://javascript.plainenglish.io/data-binding-directives-257a6ed940d2",
    "reading_time_minutes": 2,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    }
  },
  {
    "type_of": "article",
    "id": 1594651,
    "title": "Computed Properties 🤙",
    "description": "Overview   Vue uses special properties called \"Computed properties\" to help apps perform...",
    "published": true,
    "published_at": "2023-09-09T15:37:37.772Z",
    "slug": "computed-properties-482",
    "path": "/dvalin99/computed-properties-482",
    "url": "https://dev.to/dvalin99/computed-properties-482",
    "comments_count": 0,
    "public_reactions_count": 5,
    "page_views_count": 191,
    "published_timestamp": "2023-09-09T15:37:37Z",
    "body_markdown": "\n## Overview\nVue uses special properties called \"Computed properties\" to help apps perform best and avoid boring code repetition for developers.\nIn this article you will discover the features behind this incredible properties.\nLet's start 🤙🏻\n\n---\n\n## What are Computed Properties?\nA Computed property is a variable that contains the return value of a function.\nWhat differentiates this property from simple JavaScript variables are mainly three factors:\n\n- The return value depends on other external variables\n- After the calculation is performed, the value is cached\n- It's possible reuse this prop in all part of app\n\n```js\n\u003cscript setup\u003e\nimport { reactive, computed } from \"vue\";\n\nconst wizard = reactive({\n  name: \"Harry Potter\",\n  animagus: false,\n});\n\nconst isAnimagus = computed(() =\u003e wizard.animagus ? \"Yes\" : \"No\");\n\u003c/script\u003e\n\n\u003ctemplate\u003e\n  \u003cp\u003eIs {{ wizard.name }} Animagus?\u003c/p\u003e\n  \u003cspan\u003e{{ isAnimagus }}\u003c/span\u003e\n\u003c/template\u003e\n```\n\n\nIn the example above we can see how to declare and use a **Computed property**:\n1. import `computed` from Vue library: this is a native API of framework that you must use for declare a Computed Property\n2. `computed` takes a callback as a parameter and this callback **MUST** always have a return statement\n3. last step binding the variable in HTML template\n\n---\n\n## Computed vs Methods\n\nThe Computed property is not dissimilar to the method, in fact it is possible use the method approach and obtain the same result. So what is the difference?\n\nComputed properties are cached based on their reactive dependencies, meaning they are only recomputed when dependencies change, while methods are always calculated.\nFor this reason, it's recommended use when it's possible.\n\n---\n\n## Writable Computed\n\nBy default, Computed properties are getter-only, but it's possible a declare a setter and make Computed a \"Writable Computed\".\n\n```js\n\u003cscript setup\u003e\nimport { ref, computed } from 'vue'\n\nconst name = ref('Harry')\nconst surname = ref('Potter')\n\nconst fullName = computed({\n  get() {\n    return name.value + ' ' + surname.value\n  },\n  set(newValue) {\n    [name.value, surname.value] = newValue.toUpperCase()\n  }\n})\n\u003c/script\u003e\n```\nThis approach is not very common, but there're some rare cases that it may be necessary.\n\n---\n\n## Avoid mutating computed value\n\nThe returned value from a computed property is derived state. For this reason you don't need to directly modify the return value, it wouldn't make sense!\nComputed Properties are reactive and are calculated whenever their dependencies change.\n\n---\n\n## Conclusion\nComputed properties are a very important feature of Vue and allow the development of high-performance applications with lower computational costs.\nTherefore they are strongly recommended.\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e",
    "positive_reactions_count": 5,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fnw4zynzn03drcj9ualwv.png",
    "tag_list": ["vue", "javascript", "webdev", "frontend"],
    "canonical_url": "https://javascript.plainenglish.io/computed-properties-5d7db5f1df51",
    "reading_time_minutes": 2,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    }
  },
  {
    "type_of": "article",
    "id": 1503461,
    "title": "Reactivity: ref() vs reactive() 👊",
    "description": "Overview   Vue is based on the concept of reactivity just like React and Angular which makes...",
    "published": true,
    "published_at": "2023-08-29T06:00:00.000Z",
    "slug": "reactivity-concepts-in-vue-ref-vs-reactive-31dd",
    "path": "/dvalin99/reactivity-concepts-in-vue-ref-vs-reactive-31dd",
    "url": "https://dev.to/dvalin99/reactivity-concepts-in-vue-ref-vs-reactive-31dd",
    "comments_count": 0,
    "public_reactions_count": 10,
    "page_views_count": 733,
    "published_timestamp": "2023-08-29T06:00:00Z",
    "body_markdown": "## Overview\nVue is based on the concept of reactivity just like React and Angular which makes the user experience better.\nThere are two methods in Vue to declare the reactive state of an element: `ref()` and `reactive()` functions.\nIn this article, we will discover the difference between these two functions and their use cases.\nLet's start! 🤙🏼\n\n---\n\n## What is `ref()`?\n`ref()` is function that takes an argument like parameter, and returns it wrapped within a ref object with a `.value` property.\nIt is the recommended way to declare reactive state.\n\n```js\nimport { ref } from \"vue\"\n\nconst text = ref(\"Hello Vue!\");\n\nconsole.log(text) //{ value: \"Hello Vue!\" }\nconsole.log(text.value) //\"Hello Vue!\"\n```\nFor access to the value of the state, you must use `.value` property in a JavaScript template, but if you must render the state in a component template, the `.value` property is not necessary.\n\n```html\n\u003cscript setup\u003e\nimport { ref } from \"vue\"\n\nconst text = ref(\"Hello Vue!\");\n\u003c/script\u003e\n\n\u003ch1\u003e{{ text }}\u003c/h1\u003e\n```\n\n##Why `ref()`?\nFor understand the utility of `ref()` method it's necessary know how Vue works under the hood.\nWhen it is used in a template and change the ref value, Vue detects the change immediately and update the DOM accordingly,this is made possible with a dependency-tracking based reactivity system.\nIn Vanilla JavaScript, there is no way to tracks of value's changes, but it is possible intercept with getter and setter methods, when is a on object.\n\n---\n\n## What is `reactive()`?\n`reactive()` API is another way to declare reactive state and makes an object itself reactive.\n\n`reactive()` API create a JavaScript Proxies and Vue intercepts all mutations and access of all properties.\n\n```js\nimport { reactive } from 'vue';\n\nconst state = reactive({ count: 0 });\n```\n## Limitations of `reactive()`\nAs said previously, `ref()` is raccomended way to declare reactive state, because `reactive()` API has some limitations:\n\n1. **Can't use primitive values**: it only works with objects types.\n\n2. **Cannot replace entire object**: Vue's reactivity monitor only works through properties access.\nThis means that the declared object must remain the same in order not to lose reactivity.\n\n3. **It is not recommended destructure**: it is possible to lose responsiveness this way.\n\n---\n\n##Conclusion\nVue provides two API to make state reactive: `ref()` and `reactive()` , with the first choice recommended way, accomplice the fact some limitations of second choice.\nHappy coding!✨\n\n---\n\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e",
    "positive_reactions_count": 10,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fhkm4dk75e73p8x7bioe8.png",
    "tag_list": ["vue", "javascript", "webdev", "frontend"],
    "canonical_url": "https://javascript.plainenglish.io/basic-concepts-of-vue-js-ref-vs-reactive-7f20b5b08d32",
    "reading_time_minutes": 2,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    }
  },
  {
    "type_of": "article",
    "id": 1464832,
    "title": "Scaffolding a Vue 3 project using create-vue ⚡️",
    "description": "Overview   Vue.js the progressive JavaScript framework, one of three modern frontend...",
    "published": true,
    "published_at": "2023-05-17T09:40:00.000Z",
    "slug": "scaffolding-a-vue-3-project-using-create-vue-32k1",
    "path": "/dvalin99/scaffolding-a-vue-3-project-using-create-vue-32k1",
    "url": "https://dev.to/dvalin99/scaffolding-a-vue-3-project-using-create-vue-32k1",
    "comments_count": 0,
    "public_reactions_count": 4,
    "page_views_count": 313,
    "published_timestamp": "2023-05-17T09:40:00Z",
    "body_markdown": "#Overview\n\nVue.js the progressive JavaScript framework, one of three modern frontend framework with Angular and React.\nWhat is the reasons why many developers choose this framework?\n\n**1.** Vue is very simple to learn, also for beginner, thanks to its simple and declarative syntax.\n**2.** You decide when to increase the difficulty: Vue is great for small or large projects such as enterprise software.\n**3.** It's compose by a large ecosystem maintened by a community of insider and passionate people.\n\nThis article will show you how to scaffolding a Vue.js application with `create-vue`, the official scaffolding method.\n\n\n#Prerequisites\n\n- Have [Node \u003e= 16](https://nodejs.dev/en/) installed on your machine\n- Familiarity with the command line\n\n#Installation\n`create-vue` is the official method to create a Vue.js Single Page Application (SPA). It's based on [Vite](https://vitejs.dev/) a frontend tool for developing modern web applications.\n\nFirst, run the following command in your command line:\n\n```\nnpm init vue@latest\n```\nThe first time, this command will ask you to install `create-vue` and once installed, the project creation procedure will start.\nYou will be presented with prompts for several optional features:\n\n```\n√ Project name: ... \u003cyour-project-name\u003e\n√ Add TypeScript? ... No / Yes\n√ Add JSX Support? ... No / Yes\n√ Add Vue Router for Single Page Application development? ... No / Yes\n√ Add Pinia for state management? ... No / Yes\n√ Add Vitest for Unit Testing? ... No / Yes\n√ Add an End-to-End Testing Solution? » No\n√ Add ESLint for code quality? ... No / Yes\n```\nIt possible customize the scaffolding of the app adding TypeScript or JSX support, add Pinia or Vue Router, ESLint, Vitest.\nAt the end of the process, follow these commands for install the dependencies:\n\n```\ncd \u003cyour-project-name\u003e\nnpm install\n```\nCongratulations! You have created your first Vue app! 🎊\n\n\n#Run your app\nNow, you have just created your first app.\nThe folder structure is similar to this:\n\n```\n├── public\n├── node_modules\n├── src\n│   ├── assets\n│   ├── components\n│   ├── App.vue\n│   └── main.js\n├── index.html\n├── package-lock.json\n├── package.json\n└── README.md\n```\n\nOpen the terminal and run the following command:\n\n```\nnpm run dev\n```\nFollow the url on the console (for example http://localhost:5173) and you will see this:\n\n\n![First page Vue app](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjy4c54m865lq9cy9dw3.JPG)\n\n#Conclusion\nVue is a powerful and lightweight framework for creating interactive user interfaces and now you can scaffolding a project to create any applications you would like.\nHappy coding!✨\n\n---\nHi👋🏻\nMy name is Domenico, software developer passionate of Vue.js framework, I write article about it for share my knowledge and experience.\nDon't forget to visit my Linktree to discover my projects 🫰🏻\n\nLinktree: https://linktr.ee/domenicotenace\n\nFollow me on dev.to for other articles 👇🏻\n\n{% embed https://dev.to/dvalin99 %}\n\nIf you like my content or want to support my work on GitHub, you can support me with a very small donation.\nI would be grateful 🥹\n\n\u003ca href=\"https://www.buymeacoffee.com/domenicotenace\"\u003e\u003cimg src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee\u0026emoji=☕\u0026slug=domenicotenace\u0026button_colour=FFDD00\u0026font_colour=000000\u0026font_family=Cookie\u0026outline_colour=000000\u0026coffee_colour=ffffff\" /\u003e\u003c/a\u003e\n",
    "positive_reactions_count": 4,
    "cover_image": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F37cq6s6961hhd1ibj20s.png",
    "tag_list": ["vue", "javascript", "frontend", "webdev"],
    "canonical_url": "https://javascript.plainenglish.io/scaffolding-a-vue-3-project-using-create-vue-%EF%B8%8F-16708e81bec3",
    "reading_time_minutes": 2,
    "user": {
      "name": "Domenico Tenace",
      "username": "dvalin99",
      "twitter_username": "dome_tena99",
      "github_username": "DomeT99",
      "user_id": 985143,
      "website_url": "https://linktr.ee/domenicotenace",
      "profile_image": "https://media.dev.to/cdn-cgi/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg",
      "profile_image_90": "https://media.dev.to/cdn-cgi/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F985143%2F00aef0e8-465d-45c8-96d2-5b3af8d9e97e.jpg"
    }
  }
]
